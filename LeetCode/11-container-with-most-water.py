###############################################################################################
# 此题本来也想到了从两端走的双指针，但没想出先移动哪个，还是差点意思啊
# 其实很简单，肯定只能移动矮的那个，因为每次往中间移动，两点距离只能减少
# 当而移动高的那个，两个高度的最小值只会减少不会增多
###########
# 时间复杂度：O(n)
# 空间复杂度：O(1)
###############################################################################################
class Solution:
    def maxArea(self, height: List[int]) -> int:
        i, j, max_area = 0, len(height)-1, 0
        while i < j:
            max_area = max(max_area, (j - i)*min(height[j], height[i]))
            if height[i] < height[j]: # 移动矮的那个
                i += 1
            else:
                j -= 1
        return max_area